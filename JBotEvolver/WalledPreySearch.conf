--output WalledPreySearch

--robots
 classname=simulation.robot.FlightDroneRobot,
	numberofrobots=1,
	is3dimensional=true,
	sensors=(
		RobotSensor_1=(
			classname=simulation.robot.sensors.RobotSensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=1
		),
		WallRaySensor_2=(
			classname=simulation.robot.sensors.WallRaySensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=2
		)
	)

--controllers
 classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		inputs=(
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			WallSensorNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.WallSensorNNInput,
				id=2
			),
			PreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=3
			),
			
		),
		outputs=(
			FlightDroneNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.FlightDroneNNOutput,
				id=1
			),
			PreyPickerNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.PreyPickerNNOutput,
				id=2
			),
			
		)
	)

--population classname=evolutionaryrobotics.populations.MuLambdaPopulation

--environment
 classname=simulation.environment.PreySearchingEnvironment,
	steps=1000

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.GenerationalEvolution

--evaluation classname=evolutionaryrobotics.evaluationfunctions.PreySearchingWithWallsFunction

--random-seed 1

simplepreysensor_3=(classname=simulation.robot.sensors.preysensor,numbersensors=10,extraeyestopbottomview=1,eyes3d8sides=1,id=3),preycarriedsensor_4=(classname=simulation.robot.sensors.preycarriedsensor,id=4)),actuators=(flightdroneactuator_1=(classname=simulation.robot.actuators.flightdroneactuator,id=1) PreyPickerActuator_2=(classname=simulation.robot.actuators.PreyPickerActuator,id=2)
