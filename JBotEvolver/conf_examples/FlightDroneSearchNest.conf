--output forage3DFlightBased

--robots
 	classname=simulation.robot.FlightDroneRobot,
	sensors=(
		SimpleNestSensor_1=(
			classname=simulation.robot.sensors.SimpleNestSensor,
			range=2,
			numbersensors=10,
			extraeyesTopBottomView=1,
			eyes3d8Sides=1,
			id=1
		),
		RobotSensor_2=(
			classname=simulation.robot.sensors.RobotSensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=2
		),
		WallSensor_3=(
			classname=simulation.robot.sensors.WallSensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=3
		)
	),
	actuators=(
		FlightDroneActuator_1=(
			classname=simulation.robot.actuators.FlightDroneActuator,
			id=1
		),
	)

--controllers
 	classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		inputs=(
			SimpleNestNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=2
			),
			WallSensorNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.WallSensorNNInput,
				id=3
			),
		),
		outputs=(
			FlightDroneNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.FlightDroneNNOutput,
				id=1
			),
			
		)
	)

--population classname=evolutionaryrobotics.populations.MuLambdaPopulation

--environment
 	classname=SearchNestMazeEnvironment,
 	is3D=1,
	steps=1000

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.GenerationalEvolution

--evaluation classname=evolutionaryrobotics.evaluationfunctions.ForagingEvaluationFunction

--random-seed 1