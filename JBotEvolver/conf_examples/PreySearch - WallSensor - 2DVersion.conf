--output WalledPreySearchVersion2

--robots
 classname=simulation.robot.DifferentialDriveRobot,
	numberofrobots=1,
	is3dimensional=true,
	sensors=(
		RobotSensor_1=(
			classname=simulation.robot.sensors.RobotSensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=1
		),
		PreyCarriedSensor_2=(
			classname=simulation.robot.sensors.PreyCarriedSensor,
			id=2
		),
		SimplePreySensor_3=(
			classname=simulation.robot.sensors.PreySensor,
			numbersensors=10,
			extraeyesTopBottomView=1,
			eyes3d8Sides=1,
			id=3
		),
		WallSensor_4=(
			classname=simulation.robot.sensors.WallSensor,
			numbersensors=10,
			eyes3d8Sides=1,
			extraeyesTopBottomView=1,
			id=4
		),
	),
	actuators=(
		TwoWheelActuator_1=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1
		),
		PreyPickerActuator_2=(
			classname=simulation.robot.actuators.PreyPickerActuator,
			id=2
		)l,
	)

--controllers
 classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		inputs=(
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			PreyPickerNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=2
			),
			PreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=3
			),	
			WallNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=4
			),
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			PreyPickerNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.PreyPickerNNOutput,
				id=2
			),
		)
	)

--population classname=evolutionaryrobotics.populations.MuLambdaPopulation

--environment
 classname=simulation.environment.PreySearchingEnvironment,
 	is3D=0,
	steps=1000

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.GenerationalEvolution

--evaluation classname=evolutionaryrobotics.evaluationfunctions.PreySearchingWithWallsFunction

--random-seed 1

