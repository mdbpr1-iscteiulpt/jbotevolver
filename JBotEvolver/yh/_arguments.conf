--environment
classname=simulation.environment.EmptyEnvironment
--executor
classname=taskexecutor.ConillonTaskExecutor
--evaluation
classname=evolutionaryrobotics.evaluationfunctions.EmptyEvaluationFunction
--random-seed
1
--controllers
classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.evolution.neat.NEATNeuralNetwork,
		inputs=(
			NearRobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			
		),
		outputs=(
			FlightDroneNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.FlightDroneNNOutput,
				id=1
			),
			
		)
	)
--evolution
classname=evolutionaryrobotics.evolution.CoEvolution
--robots
classname=simulation.robot.FlightDroneRobot,
	sensors=(
		NearRobotSensor_1=(
			classname=simulation.robot.sensors.NearRobotSensor,
			id=1
		)
	),
	actuators=(
		FlightDroneActuator_1=(
			classname=simulation.robot.actuators.FlightDroneActuator,
			id=1
		)
	)
--population
classname=evolutionaryrobotics.populations.NEATPopulation,
	parentfolder=C:\Users\migue\git\jbotevolver\JBotEvolver\yh
--output
yh
